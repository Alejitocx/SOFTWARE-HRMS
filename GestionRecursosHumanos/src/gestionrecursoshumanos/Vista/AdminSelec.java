/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestionrecursoshumanos.Vista;

import gestionrecursoshumanos.Modelo.Cargo;

import gestionrecursoshumanos.Modelo.Personas;
import gestionrecursoshumanos.Modelo.PersonasDAO;
import gestionrecursoshumanos.Modelo.ProcesoPersona;
import gestionrecursoshumanos.Modelo.ProcesoPersonaDAO;
import gestionrecursoshumanos.Modelo.ProcesoSeleccion;
import gestionrecursoshumanos.Modelo.ProcesoSeleccionDAO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alejo
 */
public class AdminSelec extends javax.swing.JPanel {

    /**
     * Creates new form AdminSelec
     */
    public AdminSelec() {
        initComponents();
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JtextId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TxtIdper = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        TxtCargo = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setMaximumSize(new java.awt.Dimension(1097, 817));
        jPanel2.setMinimumSize(new java.awt.Dimension(1097, 817));

        jLabel3.setText("jLabel3");

        jLabel2.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("IDENTIFICACION DEL CARGO");
        jLabel2.setToolTipText("");

        JtextId.setBackground(new java.awt.Color(255, 255, 255));
        JtextId.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        JtextId.setForeground(new java.awt.Color(0, 0, 0));
        JtextId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtextIdActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("ID PROCESO ASPIRANTE");
        jLabel4.setToolTipText("");

        TxtIdper.setBackground(new java.awt.Color(255, 255, 255));
        TxtIdper.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        TxtIdper.setForeground(new java.awt.Color(0, 0, 0));
        TxtIdper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtIdperActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("IDENTIFICACION DEL ASPIRANTE ");
        jLabel5.setToolTipText("");

        jButton1.setBackground(new java.awt.Color(0, 102, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ACEPTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID DE PERSONA", "ASPIRANTE", "TELEFONO", "PROFESION", "DIRECCION", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("RECHAZAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("SELECCION DE ASPIRANTES");

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("LLENAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setText("INFO");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        TxtCargo.setBackground(new java.awt.Color(255, 255, 255));
        TxtCargo.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(1050, 1050, 1050))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JtextId, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(TxtIdper, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(58, 58, 58)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(101, 101, 101))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(311, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(279, 279, 279)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(jButton4)
                    .addContainerGap(989, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JtextId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtIdper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)
                            .addComponent(TxtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(111, 111, 111))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(46, 46, 46)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(726, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(182, 182, 182)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(590, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1053, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  try {
        // Obtener el ID de proceso persona ingresado por el usuario
        String numeroProcesoStr = JtextId.getText().trim();
        if (numeroProcesoStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número para el proceso persona.");
            return;
        }
        int numeroProceso;
        try {
            numeroProceso = Integer.parseInt(numeroProcesoStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido para el proceso persona.");
            return;
        }

        // Verificar si el ID de proceso persona ya existe en la base de datos
        ProcesoPersona existente = new ProcesoPersonaDAO().buscarProcesoPersonaPorId(numeroProceso);
        if (existente != null) {
            JOptionPane.showMessageDialog(null, "El ID del proceso persona ya existe. Por favor, ingrese un ID único.");
            return;
        }

        // Obtener el ID de persona ingresado por el usuario
        String idPersonaStr = TxtIdper.getText().trim();
        if (idPersonaStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número para el ID de la persona.");
            return;
        }
        int idPersona;
        try {
            idPersona = Integer.parseInt(idPersonaStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido para el ID de la persona.");
            return;
        }

        // Verificar si el ID de la persona existe en la base de datos
        Personas personaEncontrada = new PersonasDAO().findById(idPersona);
        if (personaEncontrada == null) {
            JOptionPane.showMessageDialog(null, "La persona no fue encontrada en la base de datos.");
            return;
        }

        // Obtener el ID del proceso de selección ingresado por el usuario
        String seleccionStr = TxtCargo.getText().trim();
        if (seleccionStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un ID para el proceso de selección.");
            return;
        }
        int seleccionId;
        try {
            seleccionId = Integer.parseInt(seleccionStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido para el proceso de selección.");
            return;
        }

        // Verificar si el ID del proceso de selección existe en la base de datos
        ProcesoSeleccion seleccionObj = new ProcesoSeleccionDAO().buscarProcesoSeleccionPorId(seleccionId);
        if (seleccionObj == null) {
            JOptionPane.showMessageDialog(null, "El proceso de selección no fue encontrado en la base de datos.");
            return;
        }

        // Crear el objeto ProcesoPersona con los datos obtenidos
        ProcesoPersona procesoPersona = new ProcesoPersona();
        procesoPersona.setIdProcesoPersona(numeroProceso);
        procesoPersona.setCandidato(personaEncontrada);
        procesoPersona.setSeleccion(seleccionObj); // Aquí usamos el objeto seleccionado de la base de datos

        // Insertar el proceso persona en la base de datos
        new ProcesoPersonaDAO().insert(procesoPersona);

        // Mostrar mensaje de éxito
        JOptionPane.showMessageDialog(null, "Registro insertado exitosamente.");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al procesar la solicitud: " + e.getMessage());
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TxtIdperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtIdperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtIdperActionPerformed

    private void JtextIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtextIdActionPerformed

        JOptionPane.showMessageDialog(null, "EL ID DEL PROCESO DEBE SER IGUAL A LA IDENTIFICACION DE LA PERSONA.");
        // TODO add your handling code here:
    }//GEN-LAST:event_JtextIdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 String idPersonaStr = TxtIdper.getText().trim();

    if (!idPersonaStr.isEmpty()) {
        try {
            int idPersona = Integer.parseInt(idPersonaStr);

            // Crear instancia de PersonasDAO
            PersonasDAO personasDAO = new PersonasDAO();
            Personas persona = personasDAO.findById(idPersona);

            // Verificar si la persona existe
            if (persona == null) {
                JOptionPane.showMessageDialog(null, "El ID de persona no existe en la base de datos.");
                return;
            }

            // Confirmación de eliminación
            int confirm = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar esta persona?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Eliminar la persona
                personasDAO.eliminarPersona(idPersona);

                // Actualizar la tabla
                actualizarTablaPersonas(personasDAO);

                JOptionPane.showMessageDialog(null, "Persona eliminada exitosamente.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido para el ID de la persona.");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al eliminar la persona: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error inesperado: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Por favor, ingrese el ID de la persona.");
    }
}

// Método para actualizar la tabla de personas
private void actualizarTablaPersonas(PersonasDAO personasDAO) {
    List<Personas> lista = personasDAO.findAll();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    for (Personas persona : lista) {
        model.addRow(new Object[]{
            persona.getId_persona(),
            persona.getNombre_Completo(),
            persona.getTelefono(),
            persona.getProfesion(),
            persona.getDireccion(),
            persona.getEmail(),
        });
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
          try {
    // Crear instancia de PersonasDAO
    PersonasDAO personasDAO = new PersonasDAO();
    // Obtener la lista de todas las personas
    List<Personas> lista = personasDAO.findAll(); // Usamos findAll()

    // Obtener el modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    // Limpiar tabla existente
    model.setRowCount(0);

    // Recorrer la lista de personas y agregar cada persona como una fila en la tabla
    for (Personas persona : lista) {
        model.addRow(new Object[]{
            persona.getId_persona(),
            persona.getNombre_Completo(),
            persona.getTelefono(),
            persona.getProfesion(),
            persona.getDireccion(),
            persona.getEmail(),
          
        });
    }
} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error al cargar datos: " + e.getMessage());
}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       JOptionPane.showMessageDialog(null,"PARA GUARDAR EL EMPLEADO EL ID DE EL PROCESO DEBE SER IGUAL AL DEL ASPIRANTE");
        JOptionPane.showMessageDialog(null,"PARA ELIMINAR EL ASPIRANTE SE DEBE INGRESAR SU ID");
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JtextId;
    private javax.swing.JTextField TxtCargo;
    private javax.swing.JTextField TxtIdper;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
